<?php
/**
 * @file
 * Code for the Band booking admin feature.
 */

include_once 'band_booking_admin.features.inc';

function band_booking_admin_menu() {
  return [
    'band_booking_dashboard' => array(
      'title' => 'Artists !',
      'description' => 'Artists management',
      //'page callback'   => 'drupal_goto',
      'page callback' => 'mymodule_abc_view',
      //'page arguments'   => array('admin/artists/list'),
      //'access callback' => '_as_user_become_partner_page_access',
      //'file' => 'includes/as_user_become_partner_page_view.inc',
      //'weight' => 40,
      //'menu_name' => 'management',
      'type' => MENU_NORMAL_ITEM,
    ),
    // Fonctionne
    /*
    'docs' => array(
      'title' => 'Documentations',
      // @TODO : manage title.
      // 'title callback' => '_as_doc_get_contextual_docs_page_title',
      'description' => 'Documentations',
      'page callback' => '_as_doc_docs_page_view',
      'access callback' => TRUE,
      'file' => 'includes/as_doc_docs_page_view.inc',
      'weight' => 20,
      //'menu_name' => 'menu-api-store-menu',
      'type' => MENU_NORMAL_ITEM,
    ),
    'admin/artists/list' => array(
      'title' => 'Documentations',
      'description' => 'Documentations',
      'access callback' => TRUE,
      'weight' => 20,
      'type' => MENU_NORMAL_ITEM,
    ),*/

    /*
    'admin/artists' => array(
      'title' => 'Artists',
      'page callback' => 'drupal_goto',
      'page arguments'   => array('admin/artists/list'),
      'access callback' => TRUE,
      'weight' => 20,
      'type' => MENU_NORMAL_ITEM,
    ),
    'admin/artists/list' => array(
      'title' => 'Liste des artistes',
      'weight' => 10,
      'type' => MENU_NORMAL_ITEM,
    ),
    'admin/artists/add' => array(
      'title' => 'Add an artist',
      //'page callback' => '_as_doc_docs_page_view',
      'access callback' => TRUE,
      //'file' => 'includes/as_doc_docs_page_view.inc',
      'weight' => 20,
      'type' => MENU_NORMAL_ITEM,
    ),*/


      /*
    'user/create/artist' => array(
      'title' => 'Liste b',
      'page callback' => '_as_doc_docs_page_view',
      'access callback' => TRUE,
      'file' => 'includes/as_doc_docs_page_view.inc',
      'weight' => 30,
      'type' => MENU_NORMAL_ITEM,
    ),*/
    /*
    'admin/artists/listeeeb' => array(
      'title' => 'Liste b',
      'page callback' => '_as_doc_docs_page_view',
      'access callback' => TRUE,
      'file' => 'includes/as_doc_docs_page_view.inc',
      'weight' => 30,
      'type' => MENU_NORMAL_ITEM,
    ),*/
  ];
}

function mymodule_abc_view() {

  // ...
  return '<p>YOOOOOO</p>';
}

/**
 * Alter menu items, specially for Admin parts.
 *
 * @param $items
 *   List of menu items.
 */
function band_booking_admin_menu_alter(&$items) {
  // List of strictly admin reserved menu items and permissions.
  $menu_items_strictly_admin = [
    'node/add' => [
      'roles' => [BB_ADMINISTRATOR_RID, BB_MANAGER_RID],
      'permissions' => ['administer nodes']
    ],
    //'admin/people' => ['access user profiles'],
    //'admin/people/create' => ['access user profiles']
    'artist/register' => [
      'roles' => [BB_ADMINISTRATOR_RID, BB_MANAGER_RID],
      'permissions' => ['create users']
    ],
  ];

  // For each path, add associated arguments and special access function.
  //foreach ($menu_items_strictly_admin as $path => $permissions) {
  foreach ($menu_items_strictly_admin as $path => $options) {
    if (isset($items[$path])) {
      $args = array(
        'roles' => !empty($options['roles']) ? $options['roles'] : [],
        'permissions' => !empty($options['permissions']) ? $options['permissions'] : [],
      );
      $items[$path]['access arguments'] = $args;
      $items[$path]['access callback'] = 'band_booking_admin_restricted_access';
    }
  }

  /*if (isset($items['user/create/artist'])) {
    dpm($items['user/create/artist']);
    //$items[$path]['access arguments'][0][] = BB_MANAGER_RID;
  }*/
}

/**
 * Restricted access for Band booking admin parts, per role and permissions.
 *
 * @param null $rid
 *   The administrator role ID.
 * @param null $permissions
 *   The permissions array to pass.
 *
 * @return bool
 *   If user has access or no.
 */
function band_booking_admin_restricted_access($rids = NULL, $permissions = NULL){
  global $user;
  //dpm($rids);
  //dpm($permissions);

  $has_one_role = FALSE;
  $has_permission = FALSE;

  //if (isset($rid['rid'])) {
  if (!empty($rids)) {
    //dpm($rids);
    // User has no administrator role.
    foreach ($rids as $rid) {
      if (user_has_role($rid, $user)) {
        $has_one_role = TRUE;
      }
    }

    if (!$has_one_role) {
      //dpm('no role...');
      return FALSE;
    }

    //dpm('role passed');
  }

  // Has administrator role. Test every permissions.
  //elseif (!empty($permissions)) {
  if (!empty($permissions)) {
    //dpm($permissions);
    $has_permission = TRUE;
    foreach ($permissions as $permission) {
      if (!user_access($permission, $user)) {
        //dpm('pas le droit d acceder');
        $has_permission = FALSE;
        return FALSE;
      }
    }
    //dpm('permission ok');
  }

  // If all passed.
  if ($has_one_role && $has_permission) {
    //dpm('all passed');
    return TRUE;
  }

  //dpm('rien');

  // Security.
  return FALSE;
}

/**
 * Restricted access for Band booking admin parts, per role and permissions.
 *
 * @param null $rid
 *   The administrator role ID.
 * @param null $permissions
 *   The permissions array to pass.
 *
 * @return bool
 *   If user has access or no.
 * /
function band_booking_admin_restricted_access($rids = NULL, $permissions = NULL){
  global $user;
  //dpm($rids);
  //dpm($permissions);

  //if (isset($rid['rid'])) {
  if (isset($rids)) {
    // User has no administrator role.
    foreach ($rids as $rid) {
      dpm($rid);
      if (!user_has_role($rid, $user)) {
        dpm('pas de role');
        return FALSE;
      }
    }
    // Has administrator role. Test every permissions.
    //elseif (!empty($permissions)) {
    if (!empty($permissions)) {
      dpm('il y a des perm');
      foreach ($permissions as $permission) {
        if (!user_access($permission, $user)) {
          return FALSE;
        }
      }
    }
    dpm('pas de perm');
    // If all passed.
    return TRUE;
  }
  dpm('rien');

  // Security.
  return FALSE;
}*/
